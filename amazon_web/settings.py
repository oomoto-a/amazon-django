"""
Django settings for amazon_web project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'fghc3@0%p8)fv8e54^o$bxmj@4jt4(k*gdclg04!2%jeghf^63'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*","127.0.0.1:8000"]
# AMAZON＿SES関連
AWS_SES_ACCESS_KEY_ID=os.environ.get('AWS_SES_ACCESS_KEY_ID')
AWS_SES_SECRET_ACCESS_KEY=os.environ.get('AWS_SES_SECRET_ACCESS_KEY')
#EMAIL_BACKEND='django_ses.SESBackend'

#ロギング
LOGGING = {
    'version': 1,
    'disable_exsiting_logger': False,

    #ロガーの設定
    'loggers': {
        # Djangoが利用するロガー
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        # amazon_webアプリケーションが利用するロガー
        'amazon_web': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
    #　ハンドラの設定
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/django.log'),
            'formatter': 'prod',
            'when': 'D',# ログローテーション
            'interval': 1,# ログローテーション
            'backupCount': 7,# 保存しておくファイル数
        }
    },

    # formatterの設定
    'formatters': {
        'prod': {
            'format': '\t'.join([
                '%(asctime)s',
                '[%(levelname)s]',
                '%(pathname)s(Line:%(lineno)d)',
                '%(message)s'
            ])
        }
    },

}


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'data_view',
    'my_page',
    'asin.apps.AsinConfig',
    'stripe',
 #   'checkout.apps.CheckoutConfig',
    'django_tables2',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'amazon_web.middleware.auth.authMiddleware'
]


ROOT_URLCONF = 'amazon_web.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # templateをプロジェクト直下に配置するための設定
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'amazon_web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'amazon',
        'USER': 'db_admin',
        'PASSWORD': 'db_admin_amazon',
        'HOST': 'localhost',
        'PORT': '33306',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ja-jp'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Tokyo'


USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
# STATIC_ROOT = os.path.join(BASE_DIR, 'static') # プロジェクト直下にstaticを配置する
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

STATIC_URL = '/static/'

# ログイン後トップページにリダイレクト
LOGIN_REDIRECT_URL = '/my_page/'
LOGIN_URL = 'login'

# STRIPE_SECRET_KEY = "sk_test_51HyaPtA9WmOGZ5uPuVS3r317Xr6hLrMuLnxoDbyVRQYXrVipUmNYpvGONoPv01LCkGceGHfon0XunAizJA7UJR2q00pvtwY2si"
# STRIPE_PUBLISHABLE_KEY = "pk_test_51HyaPtA9WmOGZ5uPt6PuSYJx6ZlVtOuH8f7qxIIHojhk5STwhrTOnnkmw7iMqws8DcoXxritKkaVOvV45MmB68g000yLHygluB"

STRIPE_SECRET_KEY = "sk_test_51IJKmgBw8LEeJzi9KaGooKywDFdiQA2bquy7tMZflRXD20D79DC8M3DO9tuFTrgOEh4Eiym4hA5c5oyQwWIv1rDb00WOghVylj"
STRIPE_PUBLISHABLE_KEY = "pk_test_51IJKmgBw8LEeJzi9GZP32CBOH8JmPfWbZ82SlDxWsijbVF56S2CMU693PhjnR9OZHRS9VUTZ6fadcxdgAoWitpwj00VKa0cYts"
